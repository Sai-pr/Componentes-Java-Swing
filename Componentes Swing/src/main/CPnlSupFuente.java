/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.geom.AffineTransform;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author saipr
 */
public class CPnlSupFuente extends javax.swing.JPanel
{

    //Variables de color porque la vFuente puedo tomarla directamente de los componentes, pero los colores tengo que crearlo
    private static int r = 0;
    private static int g = 0;
    private static int b = 0;
    private static Color vColorTexto = new Color(0, 0, 0);
    private static Color vColorFondo = new Color(0, 0, 0);
    int vTamañoFuente = 12;
    int vTipoDeFuente = 1;
    Font vFuente = new Font("Times New Roman", vTipoDeFuente, vTamañoFuente);
    boolean primeraVez = true;

    public CPnlSupFuente()
    {
        initComponents();
        initMyComponents();
    }

    public void initMyComponents()
    {
        cargarFuentes();
        cargarSpinnerTamañoFuente();
        actualizaSlidersRGB();
    }

    public void cargarFuentes()
    {
        GraphicsEnvironment gEnv = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] fontNames = gEnv.getAvailableFontFamilyNames();
        ComboBoxModel model = new DefaultComboBoxModel(fontNames);
        vCmboxFuente.setModel(model);
        vCmboxFuente.setSelectedItem("Times New Roman");
    }

    public void cargarSpinnerTamañoFuente()
    {
        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel();
        modeloSpinner.setMaximum(35);
        modeloSpinner.setMinimum(12);
        vSpinnerTamaño.setModel(modeloSpinner);
        vSpinnerTamaño.setValue(12);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        vBtngroupColor = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        vLblR = new javax.swing.JLabel();
        vLblB = new javax.swing.JLabel();
        vLblG = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        vPnlFuente = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(1920, 100));
        setMinimumSize(new java.awt.Dimension(720, 100));
        setPreferredSize(new java.awt.Dimension(1080, 100));

        jPanel4.setBackground(new java.awt.Color(51, 255, 51));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(100, 91));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 12));

        vBtngroupColor.add(vRdbtnTexto);
        vRdbtnTexto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vRdbtnTexto.setSelected(true);
        vRdbtnTexto.setText("Texto");
        vRdbtnTexto.setContentAreaFilled(false);
        vRdbtnTexto.setPreferredSize(new java.awt.Dimension(69, 25));
        vRdbtnTexto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vRdbtnTextoActionPerformed(evt);
            }
        });
        jPanel4.add(vRdbtnTexto);

        vBtngroupColor.add(vRdbtnFondo);
        vRdbtnFondo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vRdbtnFondo.setText("Fondo");
        vRdbtnFondo.setContentAreaFilled(false);
        vRdbtnFondo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vRdbtnFondoActionPerformed(evt);
            }
        });
        jPanel4.add(vRdbtnFondo);

        add(jPanel4);

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(265, 91));

        vSliderR.setMajorTickSpacing(255);
        vSliderR.setMaximum(255);
        vSliderR.setValue(0);
        vSliderR.setOpaque(false);
        vSliderR.setPreferredSize(new java.awt.Dimension(200, 20));
        vSliderR.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSliderRStateChanged(evt);
            }
        });

        vSliderG.setMaximum(255);
        vSliderG.setValue(0);
        vSliderG.setOpaque(false);
        vSliderG.setPreferredSize(new java.awt.Dimension(200, 20));
        vSliderG.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSliderGStateChanged(evt);
            }
        });

        vSliderB.setMaximum(255);
        vSliderB.setValue(0);
        vSliderB.setOpaque(false);
        vSliderB.setPreferredSize(new java.awt.Dimension(200, 20));
        vSliderB.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSliderBStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("R");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 102));
        jLabel2.setText("G");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("B");

        vLblR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vLblR.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        vLblR.setText("0");

        vLblB.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vLblB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        vLblB.setText("0");

        vLblG.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vLblG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        vLblG.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSliderB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSliderG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSliderR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vLblR, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(vLblG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vLblB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(vSliderR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vLblR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(vSliderG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(vLblG, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(vSliderB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(vLblB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(65, 91));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/PNGcolorChooser_32px.png"))); // NOI18N
        jButton1.setToolTipText("Mas colores");
        jButton1.setAlignmentY(0.0F);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setIconTextGap(0);
        jButton1.setPreferredSize(new java.awt.Dimension(42, 42));
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/2colorChooser_48px.png"))); // NOI18N
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(jPanel2);

        vPnlFuente.setLayout(new java.awt.GridBagLayout());

        vCmboxFuente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vCmboxFuente.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                vCmboxFuenteItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        vPnlFuente.add(vCmboxFuente, gridBagConstraints);

        vSpinnerTamaño.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSpinnerTamañoStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        vPnlFuente.add(vSpinnerTamaño, gridBagConstraints);

        add(vPnlFuente);
    }// </editor-fold>//GEN-END:initComponents

    private void vRdbtnTextoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_vRdbtnTextoActionPerformed
    {//GEN-HEADEREND:event_vRdbtnTextoActionPerformed
        vPnlFuente.setVisible(true);
        actualizaSlidersRGB();
    }//GEN-LAST:event_vRdbtnTextoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        JColorChooser colorChooser;
        try
        {
            if (vRdbtnTexto.isSelected())
            {
                colorChooser = new JColorChooser(vColorTexto);
                vColorTexto = colorChooser.showDialog(this, "Seleccione el color del texto", vColorTexto);
            } else if (vRdbtnFondo.isSelected())
            {
                colorChooser = new JColorChooser(vColorTexto);
                vColorFondo = colorChooser.showDialog(this, "Seleccione el color del fondo", vColorFondo);
            }
        } catch (Exception e)
        {
        }

        actualizaSlidersRGB();
        actualizarValoresRGB();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void vRdbtnFondoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_vRdbtnFondoActionPerformed
    {//GEN-HEADEREND:event_vRdbtnFondoActionPerformed
        vPnlFuente.setVisible(false);
        actualizaSlidersRGB();
    }//GEN-LAST:event_vRdbtnFondoActionPerformed

    private void vSliderRStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSliderRStateChanged
    {//GEN-HEADEREND:event_vSliderRStateChanged
        r = vSliderR.getValue();
        vLblR.setText(String.valueOf(vSliderR.getValue()));
        actualizarValoresRGB();
    }//GEN-LAST:event_vSliderRStateChanged

    //Este metodo modifica las variables R ,G ,B para crear el nuevo color.
    public void actualizarValoresRGB()
    {
        //Primero actualizo los valores RGB de los colores segun el caso
        if (vRdbtnTexto.isSelected())
        {
            vColorTexto = new Color(r, g, b);
            //Aqui actualizo los .vCpnletForeground del nuevo color c: y tambien en el ELSE pero para el; .setbackground
            CPnlContenido1.vEditLblFechaHora.setForeground(vColorTexto);
            CPnlContenido1.vEditLblLabelEditable.setForeground(vColorTexto);
            CPnlContenido1.vEditLblTextaqui.setForeground(vColorTexto);
            CPnlContenido1.vEditTextAreaEditamePlz.setForeground(vColorTexto);

        } else if (vRdbtnFondo.isSelected() && !primeraVez)
        {
            vColorFondo = new Color(r, g, b);
            CPnlContenido1.vEditLblFechaHora.setBackground(vColorFondo);
            CPnlContenido1.vEditLblLabelEditable.setBackground(vColorFondo);
            CPnlContenido1.vEditLblTextaqui.setBackground(vColorFondo);
            CPnlContenido1.vEditTextAreaEditamePlz.setBackground(vColorFondo);
        } else if (vRdbtnFondo.isSelected())
        {
            primeraVez = false;
        }
        
    }

    /**
     * Este metodo cada vez que seleccionas el boton de TEXTO o FONDO actualiza
     * las posiciones de los jsliders
     */
    public void actualizaSlidersRGB()
    {
        if (vRdbtnTexto.isSelected())
        {
            r = vColorTexto.getRed();
            g = vColorTexto.getGreen();
            b = vColorTexto.getBlue();
        } else if (vRdbtnFondo.isSelected())
        {
            r = vColorFondo.getRed();
            g = vColorFondo.getGreen();
            b = vColorFondo.getBlue();
        }
        vSliderR.setValue(r);
        vSliderG.setValue(g);
        vSliderB.setValue(b);
    }

    private void vSliderGStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSliderGStateChanged
    {//GEN-HEADEREND:event_vSliderGStateChanged
        g = vSliderG.getValue();
        vLblG.setText(String.valueOf(vSliderG.getValue()));
        actualizarValoresRGB();
    }//GEN-LAST:event_vSliderGStateChanged

    private void vSliderBStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSliderBStateChanged
    {//GEN-HEADEREND:event_vSliderBStateChanged
        b = vSliderB.getValue();
        vLblB.setText(String.valueOf(vSliderB.getValue()));
        actualizarValoresRGB();
    }//GEN-LAST:event_vSliderBStateChanged

    private void vSpinnerTamañoStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSpinnerTamañoStateChanged
    {//GEN-HEADEREND:event_vSpinnerTamañoStateChanged
        vTamañoFuente = (int) vSpinnerTamaño.getValue();
        actualizaFuentes();
    }//GEN-LAST:event_vSpinnerTamañoStateChanged

    private void vCmboxFuenteItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_vCmboxFuenteItemStateChanged
    {//GEN-HEADEREND:event_vCmboxFuenteItemStateChanged
        actualizaFuentes();
    }//GEN-LAST:event_vCmboxFuenteItemStateChanged

    /**
     * Este metodo actualiza la vFuente seleccionada, ya sea tamaño o vFuente
     * aqui se modifica.
     */
    public void actualizaFuentes()
    {
        if (vRdbtnTexto.isSelected())
        {
            vFuente = new Font(String.valueOf(vCmboxFuente.getSelectedItem()), vTipoDeFuente, vTamañoFuente);
            CPnlContenido1.vEditLblTextaqui.setFont(vFuente);
            CPnlContenido1.vEditLblLabelEditable.setFont(vFuente);
            CPnlContenido1.vEditLblFechaHora.setFont(vFuente);
            CPnlContenido1.vEditTextAreaEditamePlz.setFont(vFuente);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static final javax.swing.JButton jButton1 = new javax.swing.JButton();
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.ButtonGroup vBtngroupColor;
    public static final javax.swing.JComboBox<String> vCmboxFuente = new javax.swing.JComboBox<>();
    private javax.swing.JLabel vLblB;
    private javax.swing.JLabel vLblG;
    private javax.swing.JLabel vLblR;
    private javax.swing.JPanel vPnlFuente;
    public static final javax.swing.JRadioButton vRdbtnFondo = new javax.swing.JRadioButton();
    public static final javax.swing.JRadioButton vRdbtnTexto = new javax.swing.JRadioButton();
    public static final javax.swing.JSlider vSliderB = new javax.swing.JSlider();
    public static final javax.swing.JSlider vSliderG = new javax.swing.JSlider();
    public static final javax.swing.JSlider vSliderR = new javax.swing.JSlider();
    public static final javax.swing.JSpinner vSpinnerTamaño = new javax.swing.JSpinner();
    // End of variables declaration//GEN-END:variables

    /**
     * @return the vColorTexto
     */
    public Color getvColorTexto()
    {
        return vColorTexto;
    }

    /**
     * @param vColorTexto the vColorTexto to set
     */
    public void setvColorTexto(Color vColorTexto)
    {
        this.vColorTexto = vColorTexto;
    }

    /**
     * @return the vColorFondo
     */
    public Color getvColorFondo()
    {
        return vColorFondo;
    }

    /**
     * @param vColorFondo the vColorFondo to set
     */
    public void setvColorFondo(Color vColorFondo)
    {
        this.vColorFondo = vColorFondo;
    }

    /**
     * @return the r
     */
    public static int getR()
    {
        return r;
    }

    /**
     * @param aR the r to set
     */
    public static void setR(int aR)
    {
        r = aR;
    }

    /**
     * @return the g
     */
    public static int getG()
    {
        return g;
    }

    /**
     * @param aG the g to set
     */
    public static void setG(int aG)
    {
        g = aG;
    }

    /**
     * @return the b
     */
    public static int getB()
    {
        return b;
    }

    /**
     * @param aB the b to set
     */
    public static void setB(int aB)
    {
        b = aB;
    }
}
