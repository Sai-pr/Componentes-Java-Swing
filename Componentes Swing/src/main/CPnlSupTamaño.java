/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SpinnerNumberModel;

public class CPnlSupTamaño extends javax.swing.JPanel
{

    private static int r = 0;
    private static int g = 0;
    private static int b = 0;
    private static Color vColorTexto = new Color(0, 0, 0);
    private static Color vColorFondo = new Color(255, 255, 255);

    private static Color v2ColorLbl1_BACKGROUND = CPnlContenido1.v2EditLbl1.getBackground();
    private static Color v2ColorLbl1_FOREGROUND = CPnlContenido1.v2EditLbl1.getBackground();

    private static Color v2ColorLbl2_BACKGROUND = CPnlContenido1.v2EditLbl2.getBackground();
    private static Color v2ColorLbl2_FOREGROUND = CPnlContenido1.v2EditLbl2.getBackground();

    private static Color v2ColorLbl3_BACKGROUND = CPnlContenido1.v2EditLbl3.getBackground();
    private static Color v2ColorLbl3_FOREGROUND = CPnlContenido1.v2EditLbl3.getBackground();

    private static Color v2ColorLbl4_BACKGROUND = CPnlContenido1.v2EditLbl4.getBackground();
    private static Color v2ColorLbl4_FOREGROUND = CPnlContenido1.v2EditLbl4.getBackground();

    private static Color v2ColorPnl3_BACKGROUND = CPnlContenido1.v2EditPnl3.getBackground();
    private static Color v2ColorPnl3_FOREGROUND = CPnlContenido1.v2EditPnl3.getBackground();

    private static Color v2ColorPnl4_BACKGROUND = CPnlContenido1.v2EditPnl4.getBackground();
    private static Color v2ColorPnl4_FOREGROUND = CPnlContenido1.v2EditPnl4.getBackground();

    int vTamañoFuente = 12;
    int vTipoDeFuente = 1;
    Font v2FuenteLbl1 = new Font("Times New Roman", vTipoDeFuente, vTamañoFuente);
    Font v2FuenteLbl2 = new Font("Times New Roman", vTipoDeFuente, vTamañoFuente);
    Font v2FuenteLbl3 = new Font("Times New Roman", vTipoDeFuente, vTamañoFuente);
    Font v2FuenteLbl4 = new Font("Times New Roman", vTipoDeFuente, vTamañoFuente);

    public CPnlSupTamaño()
    {
        initComponents();
        initMyComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        vBtngroupColor = new javax.swing.ButtonGroup();
        jPanel43 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        vLblR = new javax.swing.JLabel();
        vLblB = new javax.swing.JLabel();
        vLblG = new javax.swing.JLabel();
        vPnlFuente = new javax.swing.JPanel();
        jPanel49 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1920, 100));
        setMinimumSize(new java.awt.Dimension(720, 100));
        setPreferredSize(new java.awt.Dimension(1080, 100));

        jPanel43.setMaximumSize(new java.awt.Dimension(1920, 100));
        jPanel43.setMinimumSize(new java.awt.Dimension(720, 100));
        jPanel43.setPreferredSize(new java.awt.Dimension(1080, 100));

        jPanel46.setBackground(new java.awt.Color(51, 255, 51));
        jPanel46.setOpaque(false);
        jPanel46.setPreferredSize(new java.awt.Dimension(100, 91));
        jPanel46.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 12));

        vBtngroupColor.add(vRdbtnTexto);
        vRdbtnTexto.setText("Texto");
        vRdbtnTexto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vRdbtnTextoActionPerformed(evt);
            }
        });
        jPanel46.add(vRdbtnTexto);

        vBtngroupColor.add(vRdbtnFondo);
        vRdbtnFondo.setText("Fondo");
        vRdbtnFondo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vRdbtnFondoActionPerformed(evt);
            }
        });
        jPanel46.add(vRdbtnFondo);

        jPanel43.add(jPanel46);

        jPanel47.setBackground(new java.awt.Color(255, 102, 51));
        jPanel47.setOpaque(false);
        jPanel47.setPreferredSize(new java.awt.Dimension(275, 91));

        vSliderR.setMajorTickSpacing(255);
        vSliderR.setMaximum(255);
        vSliderR.setValue(0);
        vSliderR.setOpaque(false);
        vSliderR.setPreferredSize(new java.awt.Dimension(200, 20));
        vSliderR.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSliderRStateChanged(evt);
            }
        });

        vSliderG.setMaximum(255);
        vSliderG.setValue(0);
        vSliderG.setOpaque(false);
        vSliderG.setPreferredSize(new java.awt.Dimension(200, 20));
        vSliderG.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSliderGStateChanged(evt);
            }
        });

        vSliderB.setMaximum(255);
        vSliderB.setValue(0);
        vSliderB.setOpaque(false);
        vSliderB.setPreferredSize(new java.awt.Dimension(200, 20));
        vSliderB.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSliderBStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("R");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 102));
        jLabel2.setText("G");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("B");

        vLblR.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vLblR.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        vLblR.setText("0");

        vLblB.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vLblB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        vLblB.setText("0");

        vLblG.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vLblG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        vLblG.setText("0");

        javax.swing.GroupLayout jPanel47Layout = new javax.swing.GroupLayout(jPanel47);
        jPanel47.setLayout(jPanel47Layout);
        jPanel47Layout.setHorizontalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel47Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel47Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSliderB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel47Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSliderG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel47Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSliderR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vLblG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vLblB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel47Layout.createSequentialGroup()
                        .addComponent(vLblR, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel47Layout.setVerticalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel47Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(vSliderR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vLblR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(vSliderG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(vLblG, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(vSliderB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(vLblB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel43.add(jPanel47);

        vPnlFuente.setLayout(new java.awt.GridBagLayout());

        vCmboxFuente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vCmboxFuente.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                vCmboxFuenteItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        vPnlFuente.add(vCmboxFuente, gridBagConstraints);

        vSpinnerTamaño.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                vSpinnerTamañoStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        vPnlFuente.add(vSpinnerTamaño, gridBagConstraints);

        jPanel43.add(vPnlFuente);

        jPanel49.setPreferredSize(new java.awt.Dimension(80, 91));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(80, 130));

        vListapaneles.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vListapaneles.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Label 1", "Label 2", "Label 3", "Label 4", "Panel 3", "Panel 4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        vListapaneles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vListapaneles.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                vListapanelesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(vListapaneles);

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel43.add(jPanel49);

        add(jPanel43);
    }// </editor-fold>//GEN-END:initComponents

    private void vSliderRStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSliderRStateChanged
    {//GEN-HEADEREND:event_vSliderRStateChanged
        r = vSliderR.getValue();
        System.out.println("r == " + r);
        vLblR.setText(String.valueOf(vSliderR.getValue()));
        actualizarValoresRGB();
    }//GEN-LAST:event_vSliderRStateChanged

    private void vSliderGStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSliderGStateChanged
    {//GEN-HEADEREND:event_vSliderGStateChanged
        g = vSliderG.getValue();
        vLblG.setText(String.valueOf(vSliderG.getValue()));
        actualizarValoresRGB();
    }//GEN-LAST:event_vSliderGStateChanged

    private void vSliderBStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSliderBStateChanged
    {//GEN-HEADEREND:event_vSliderBStateChanged
        b = vSliderB.getValue();
        vLblB.setText(String.valueOf(vSliderB.getValue()));
        actualizarValoresRGB();
    }//GEN-LAST:event_vSliderBStateChanged

    private void vCmboxFuenteItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_vCmboxFuenteItemStateChanged
    {//GEN-HEADEREND:event_vCmboxFuenteItemStateChanged
        actualizaFuentes();
    }//GEN-LAST:event_vCmboxFuenteItemStateChanged

    private void vSpinnerTamañoStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_vSpinnerTamañoStateChanged
    {//GEN-HEADEREND:event_vSpinnerTamañoStateChanged
        vTamañoFuente = (int) vSpinnerTamaño.getValue();
        actualizaFuentes();
    }//GEN-LAST:event_vSpinnerTamañoStateChanged

    private void vListapanelesValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_vListapanelesValueChanged
    {//GEN-HEADEREND:event_vListapanelesValueChanged
        CPnlContenido1.seleccionarComponente(vListapaneles.getSelectedIndex());
    }//GEN-LAST:event_vListapanelesValueChanged

    private void vRdbtnTextoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_vRdbtnTextoActionPerformed
    {//GEN-HEADEREND:event_vRdbtnTextoActionPerformed
        vPnlFuente.setVisible(true);
        actualizaSlidersRGB();
    }//GEN-LAST:event_vRdbtnTextoActionPerformed

    private void vRdbtnFondoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_vRdbtnFondoActionPerformed
    {//GEN-HEADEREND:event_vRdbtnFondoActionPerformed
        vPnlFuente.setVisible(false);
        actualizaSlidersRGB();
    }//GEN-LAST:event_vRdbtnFondoActionPerformed

    public void initMyComponents()
    {
        vRdbtnTexto.setSelected(true);
        vListapaneles.setSelectedIndex(0);
        cargarFuentes();
        cargarSpinnerTamañoFuente();
        actualizaSlidersRGB();
    }

    public void cargarFuentes()
    {
        GraphicsEnvironment gEnv = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] fontNames = gEnv.getAvailableFontFamilyNames();
        ComboBoxModel model = new DefaultComboBoxModel(fontNames);
        vCmboxFuente.setModel(model);
        vCmboxFuente.setSelectedItem("Times New Roman");
    }

    public void cargarSpinnerTamañoFuente()
    {
        SpinnerNumberModel modeloSpinner = new SpinnerNumberModel();
        modeloSpinner.setMaximum(35);
        modeloSpinner.setMinimum(12);
        vSpinnerTamaño.setModel(modeloSpinner);
        vSpinnerTamaño.setValue(18);
    }

    //Este metodo modifica las variables R ,G ,B para crear el nuevo color.
    public void actualizarValoresRGB()
    {
        //Primero actualizo los valores RGB de los colores segun el caso
        if (CMai2.vTbpnlSup.getSelectedIndex() == 1)
        {
            if (CPnlContenido1.bLbl1 && CPnlSupTamaño.vRdbtnTexto.isSelected())
            {
                v2ColorLbl1_FOREGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl1.setForeground(v2ColorLbl1_FOREGROUND);
            } else if (CPnlContenido1.bLbl1 && CPnlSupTamaño.vRdbtnFondo.isSelected())
            {
                v2ColorLbl1_BACKGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl1.setBackground(v2ColorLbl1_BACKGROUND);
            } else if (CPnlContenido1.bLbl2 && CPnlSupTamaño.vRdbtnTexto.isSelected())
            {
                v2ColorLbl2_FOREGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl2.setForeground(v2ColorLbl2_FOREGROUND);
            } else if (CPnlContenido1.bLbl2 && CPnlSupTamaño.vRdbtnFondo.isSelected())
            {
                v2ColorLbl2_BACKGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl2.setBackground(v2ColorLbl2_BACKGROUND);
            } else if (CPnlContenido1.bLbl3 && CPnlSupTamaño.vRdbtnTexto.isSelected())
            {
                v2ColorLbl3_FOREGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl3.setForeground(v2ColorLbl3_FOREGROUND);
            } else if (CPnlContenido1.bLbl3 && CPnlSupTamaño.vRdbtnFondo.isSelected())
            {
                v2ColorLbl3_BACKGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl3.setBackground(v2ColorLbl3_BACKGROUND);
            } else if (CPnlContenido1.bLbl4 && CPnlSupTamaño.vRdbtnTexto.isSelected())
            {
                v2ColorLbl4_FOREGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl4.setForeground(v2ColorLbl4_FOREGROUND);
            } else if (CPnlContenido1.bLbl4 && CPnlSupTamaño.vRdbtnFondo.isSelected())
            {
                v2ColorLbl4_BACKGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditLbl4.setBackground(v2ColorLbl4_BACKGROUND);
            } else if (CPnlContenido1.bPnl3 && CPnlSupTamaño.vRdbtnFondo.isSelected())
            {
                v2ColorPnl3_BACKGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditPnl3.setBackground(v2ColorPnl3_BACKGROUND);
            } else if (CPnlContenido1.bPnl4 && CPnlSupTamaño.vRdbtnFondo.isSelected())
            {
                v2ColorPnl4_BACKGROUND = new Color(r, g, b);
                CPnlContenido1.v2EditPnl4.setBackground(v2ColorPnl4_BACKGROUND);
            }
        }
    }

    /**
     * Este metodo cada vez que seleccionas el boton de TEXTO o FONDO actualiza
     * las posiciones de los jsliders
     */
    public void actualizaSlidersRGB()
    {
        if (vRdbtnTexto.isSelected())
        {
            r = vColorTexto.getRed();
            g = vColorTexto.getGreen();
            b = vColorTexto.getBlue();
        } else if (vRdbtnFondo.isSelected())
        {
            r = vColorFondo.getRed();
            g = vColorFondo.getGreen();
            b = vColorFondo.getBlue();
        }
        vSliderR.setValue(r);
        vSliderG.setValue(g);
        vSliderB.setValue(b);
    }

    public void actualizaFuentes()
    {
        try
        {
            if (vRdbtnTexto.isSelected())
            {
                if (CMai2.vTbpnlSup.getSelectedIndex() == 1)
                {
                    if (CPnlContenido1.bLbl1 && CPnlSupTamaño.vRdbtnTexto.isSelected())
                    {
                        v2FuenteLbl1 = new Font(String.valueOf(vCmboxFuente.getSelectedItem()), vTipoDeFuente, vTamañoFuente);
                        CPnlContenido1.v2EditLbl1.setFont(v2FuenteLbl1);
                    } else if (CPnlContenido1.bLbl2 && CPnlSupTamaño.vRdbtnTexto.isSelected())
                    {
                        v2FuenteLbl2 = new Font(String.valueOf(vCmboxFuente.getSelectedItem()), vTipoDeFuente, vTamañoFuente);
                        CPnlContenido1.v2EditLbl2.setFont(v2FuenteLbl2);
                    } else if (CPnlContenido1.bLbl3 && CPnlSupTamaño.vRdbtnTexto.isSelected())
                    {
                        v2FuenteLbl3 = new Font(String.valueOf(vCmboxFuente.getSelectedItem()), vTipoDeFuente, vTamañoFuente);
                        CPnlContenido1.v2EditLbl3.setFont(v2FuenteLbl3);
                    } else if (CPnlContenido1.bLbl4 && CPnlSupTamaño.vRdbtnTexto.isSelected())
                    {
                        v2FuenteLbl4 = new Font(String.valueOf(vCmboxFuente.getSelectedItem()), vTipoDeFuente, vTamañoFuente);
                        CPnlContenido1.v2EditLbl4.setFont(v2FuenteLbl4);
                    }
                }
            }
        } catch (Exception e)
        {
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup vBtngroupColor;
    public static final javax.swing.JComboBox<String> vCmboxFuente = new javax.swing.JComboBox<>();
    private javax.swing.JLabel vLblB;
    private javax.swing.JLabel vLblG;
    private javax.swing.JLabel vLblR;
    public static final javax.swing.JList<String> vListapaneles = new javax.swing.JList<>();
    private javax.swing.JPanel vPnlFuente;
    public static final javax.swing.JCheckBox vRdbtnFondo = new javax.swing.JCheckBox();
    public static final javax.swing.JCheckBox vRdbtnTexto = new javax.swing.JCheckBox();
    public static final javax.swing.JSlider vSliderB = new javax.swing.JSlider();
    public static final javax.swing.JSlider vSliderG = new javax.swing.JSlider();
    public static final javax.swing.JSlider vSliderR = new javax.swing.JSlider();
    public static final javax.swing.JSpinner vSpinnerTamaño = new javax.swing.JSpinner();
    // End of variables declaration//GEN-END:variables
}
